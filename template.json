{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String"
        },
        "virtualMachineScaleSetName": {
            "type": "String"
        },
        "virtualMachineScaleSetRG": {
            "type": "String"
        },
        "singlePlacementGroup": {
            "type": "String"
        },
        "instanceSize": {
            "type": "String"
        },
        "instanceCount": {
            "type": "String"
        },
        "upgradeMode": {
            "type": "String"
        },
        "priority": {
            "type": "String"
        },
        "enableAcceleratedNetworking": {
            "type": "String"
        },
        "subnetId": {
            "type": "String"
        },
        "osDiskType": {
            "type": "String"
        },
        "virtualNetworkId": {
            "type": "String"
        },
        "virtualNetworkName": {
            "type": "String"
        },
        "networkInterfaceConfigurations": {
            "type": "Array"
        },
        "vmName": {
            "type": "String"
        },
        "scaleInPolicy": {
            "type": "Object"
        },
        "upgradePolicy": {
            "type": "String"
        },
        "adminUsername": {
            "type": "String"
        },
        "adminPassword": {
            "type": "SecureString"
        },
        "autoScaleDefault": {
            "type": "String"
        },
        "autoScaleMin": {
            "type": "String"
        },
        "autoScaleMax": {
            "type": "String"
        },
        "scaleOutCPUPercentageThreshold": {
            "type": "String"
        },
        "durationTimeWindow": {
            "type": "String"
        },
        "scaleOutInterval": {
            "type": "String"
        },
        "scaleInCPUPercentageThreshold": {
            "type": "String"
        },
        "scaleInInterval": {
            "type": "String"
        },
        "platformFaultDomainCount": {
            "type": "String"
        },
        "domainName": {
            "type": "String"
        },
        "OUDN": {
            "type": "String"
        },
        "domainAndUsername": {
            "type": "String",
            "metadata": {
                "description": "You must provide the username in the following convention NETBIOS BACKSLASH USERNAME "
            }
        },
        "domainJoinPassword": {
            "type": "SecureString"
        }
    },
    "variables": {
        "storageApiVersion": "2019-06-01",
        "namingInfix": "[toLower(substring(concat(parameters('virtualMachineScaleSetName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "vmssId": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSetName'))]",
        "autoScaleResourceName": "[concat(parameters('virtualMachineScaleSetName'), 'autoscale')]",
        "domainJoinOptions": 3
    },
    "resources": [
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "apiVersion": "2015-04-01",
            "name": "[variables('autoScaleResourceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('virtualMachineScaleSetName'))]"
            ],
            "properties": {
                "name": "[variables('autoScaleResourceName')]",
                "targetResourceUri": "[variables('vmssId')]",
                "enabled": true,
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "[parameters('autoScaleMin')]",
                            "maximum": "[parameters('autoScaleMax')]",
                            "default": "[parameters('autoScaleDefault')]"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[variables('vmssId')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "[concat('PT', parameters('durationTimeWindow'), 'M')]",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": "[parameters('scaleOutCPUPercentageThreshold')]"
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "[parameters('scaleOutInterval')]",
                                    "cooldown": "PT1M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[variables('vmssId')]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": "[parameters('scaleInCPUPercentageThreshold')]"
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "[parameters('scaleInInterval')]",
                                    "cooldown": "PT1M"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2019-07-01",
            "name": "[parameters('virtualMachineScaleSetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "sku": {
                "name": "[parameters('instanceSize')]",
                "capacity": "[int(parameters('instanceCount'))]"
            },
            "properties": {
                "overprovision": "true",
                "upgradePolicy": {
                    "mode": "[parameters('upgradePolicy')]"
                },
                "singlePlacementGroup": "[parameters('singlePlacementGroup')]",
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "fromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "[parameters('osDiskType')]"
                            }
                        },
                        "imageReference": {
                            "id": "/subscriptions/4e4eec1a-a20f-411e-a026-9690737e4538/resourceGroups/rg-mgmt-neu/providers/Microsoft.Compute/images/W10-1909-image"
                        }
                    },
                    "priority": "[parameters('priority')]",
                    "networkProfile": {
                        "copy": [
                            {
                                "name": "networkInterfaceConfigurations",
                                "count": "[length(parameters('networkInterfaceConfigurations'))]",
                                "input": {
                                    "name": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name]",
                                    "properties": {
                                        "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                        "enableAcceleratedNetworking": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].enableAcceleratedNetworking]",
                                        "ipConfigurations": [
                                            {
                                                "name": "[concat(parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name, '-defaultIpConfiguration')]",
                                                "properties": {
                                                    "subnet": {
                                                        "id": "[parameters('subnetId')]"
                                                    },
                                                    "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                                    "applicationGatewayBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].applicationGatewayBackendAddressPools]",
                                                    "loadBalancerBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].loadBalancerBackendAddressPools]",
                                                    "loadBalancerInboundNatPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].loadBalancerInboundNatPools]",
                                                    "publicIPAddressConfiguration": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, ''), json('null'), union(json(concat('{\"name\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, '\"}'))\n                        ,json('{\"properties\": { \"idleTimeoutInMinutes\": 15}}')))]"
                                                }
                                            }
                                        ],
                                        "networkSecurityGroup": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, ''), json('null'),json(concat('{\"id\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, '\"}')))]"
                                    }
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "joindomain",
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "type": "JsonADDomainExtension",
                                    "typeHandlerVersion": "1.3",
                                    "settings": {
                                        "Name": "[parameters('domainName')]",
                                        "OUPath": "[parameters('OUDN')]",
                                        "User": "[parameters('domainAndUsername')]",
                                        "Restart": "true",
                                        "Options": "[variables('domainJoinOptions')]"
                                    },
                                    "protectedsettings": {
                                        "Password": "[parameters('domainJoinPassword')]"
                                    }
                                }
                            }
                        ]
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "windowsConfiguration": {
                            "provisionVmAgent": true
                        }
                    },
                    "licenseType": "Windows_Client"
                },
                "scaleInPolicy": "[parameters('scaleInPolicy')]",
                "platformFaultDomainCount": "[parameters('platformFaultDomainCount')]"
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}